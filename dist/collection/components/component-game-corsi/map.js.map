{"version":3,"file":"map.js","sourceRoot":"","sources":["../../../../src/components/component-game-corsi/map.ts"],"names":[],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\r\nimport { ComponentGameCorsi } from \"./component-game-corsi\";\r\nimport * as Anim from \"./../../../animPromise\"\r\nimport { Block } from \"./block\";\r\nimport { res } from \"./corsi-init\";\r\n\r\n\texport class Map extends PIXI.Container {\r\n\t\tprivate bg: PIXI.Sprite;\r\n\t\tprivate mapSizeX: number;\r\n\t\tprivate mapSizeY: number;\r\n\t\tprivate animLength: number;\r\n\t\tprivate maxRound: number = 3;\r\n\t\tprivate currRound: number = 0;\r\n\t\tprivate blocks: Block[] = [];\r\n\t\tprivate animatedBlocks: Block[] = [];\r\n\t\tprivate badAnswers: number;\r\n\t\tprivate clickCounter: number;\r\n\r\n\t\tconstructor(settings: any, private game: ComponentGameCorsi) {\r\n\t\t\tsuper();\r\n\t\t\t//configuring the map\r\n\t\t\tthis.mapSizeX = this.game.cols;\r\n\t\t\tthis.mapSizeY = this.game.rows;\r\n\t\t\tthis.bg = new PIXI.Sprite(this.game.loader.resources[\"bg\"].texture);\r\n\t\t\tthis.bg.width = game.dim.w;\r\n\t\t\tthis.bg.height = game.dim.h;\r\n\t\t\tthis.bg.anchor.set(0,0);\r\n\t\t\tthis.addChild(this.bg);\r\n\t\t\tconst size = Math.min(this.game.dim.h/this.mapSizeY, this.game.dim.w/this.mapSizeX)\r\n\t\t\tconst blocksize = size-20;\r\n\t\t\tconst iconUrl = (Math.floor(Math.random() * res.figures.length)+1).toString();\r\n\t\t\tthis.animLength = settings.animLength;\r\n\t\t\tfor (let i = 0; i < this.mapSizeX; i++) {\r\n\t\t\t\tfor (let j = 0; j < this.mapSizeY; j++) {\r\n\t\t\t\t\tconst newBlock = new Block(this, iconUrl, this.game.loader, blocksize);\r\n\t\t\t\t\tnewBlock.position.set(\r\n\t\t\t\t\t\t10 + i * size,\r\n\t\t\t\t\t\t10 + j * size\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.addChild(newBlock);\r\n\t\t\t\t\tthis.blocks.push(newBlock);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.animatedBlocks = this.createAnimSequence();\r\n\t\t\tthis.startRound();\r\n\t\t};\r\n\r\n\t\tprivate async startRound() {\r\n\t\t\tthis.badAnswers = 0;\r\n\t\t\tthis.clickCounter = 0;\r\n\t\t\tthis.disableClick();\r\n\t\t\tawait Anim.scheduler.run(new Anim.Delay().setDuration(500), this);\r\n\t\t\tfor (let block of this.animatedBlocks) {\r\n\t\t\t\tawait block.show();\r\n\t\t\t}\r\n\t\t\tthis.enableClick();\r\n\t\t}\r\n\r\n\t\tprivate createAnimSequence(): Block[] {\r\n\t\t\tconst result = [];\r\n\t\t\tlet arrayCopy = this.blocks.slice();\r\n\t\t\tfor (let i = 0; i < this.animLength; i++) {\r\n\t\t\t\tresult.push(\r\n\t\t\t\t\tarrayCopy.splice(Math.floor(Math.random() * arrayCopy.length), 1)[0]\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tprivate enableClick() {\r\n\t\t\tthis.game.app.view.style.cursor = \"default\";\r\n\t\t\tthis.interactive = true;\r\n\t\t}\r\n\r\n\t\tprivate disableClick() {\r\n\t\t\tthis.game.app.view.style.cursor = \"none\";\r\n\t\t\tthis.interactive = false;\r\n\t\t}\r\n\r\n\t\tpublic async validateAnswer(block: Block) {\r\n\t\t\tif (this.clickCounter >= this.animatedBlocks.length) return;\r\n\r\n\t\t\tconst currBlockInChallenge = this.animatedBlocks[this.clickCounter];\r\n\t\t\tthis.clickCounter++;\r\n\t\t\tconst localCounter = this.clickCounter;\r\n\t\t\tif (currBlockInChallenge == block) {\r\n\t\t\t\tawait block.showGoodAnswer();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.badAnswers++;\r\n\t\t\t\tthis.game.specificLog.nofBadAnswers++;\r\n\t\t\t\tawait block.showWrongAnswer();\r\n\t\t\t}\r\n\t\t\tif (this.animatedBlocks.length <= localCounter) { // end of round\r\n\t\t\t\tthis.validateRound();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate validateRound() {\r\n\t\t\tif (this.badAnswers === 0) {\r\n\t\t\t\tthis.currRound++;\r\n\t\t\t\tif (this.currRound === this.maxRound) {\r\n\t\t\t\t\tthis.game.calculateScore();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.animatedBlocks = this.createAnimSequence();\r\n\t\t\t}\r\n\t\t\tthis.startRound();\r\n\t\t};\r\n\r\n\t}\r\n\r\n"]}